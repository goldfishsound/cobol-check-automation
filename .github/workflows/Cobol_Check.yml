name: COBOL Check Automation
on:
  push:
    branches: [ main ]
jobs:
  cobol-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    # Zowe installation.
    - name: Install Zowe CLI
      run: npm install -g @zowe/cli
      
    - name: Configure Zowe
      env:
        ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
        ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
      run: |
        zowe config init --global-config --no-prompt
        zowe config set profiles.zosmf.properties.host 204.90.115.200
        zowe config set profiles.zosmf.properties.port 10443
        zowe config set profiles.zosmf.properties.user "$ZOWE_USERNAME"
        zowe config set profiles.zosmf.properties.password "$ZOWE_PASSWORD"
        zowe config set profiles.zosmf.properties.rejectUnauthorized false
        zowe zosmf check status

    - name: Setup Mainframe Environment and Upload COBOL Check
      env:
        ZOWE_OPT_HOST: 204.90.115.200
        ZOWE_OPT_PORT: 10443
        ZOWE_OPT_USER: ${{ secrets.ZOWE_USERNAME }}
        ZOWE_OPT_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        ZOWE_OPT_REJECT_UNAUTHORIZED: false 
        ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
        ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
      run: |
        chmod +x .github/scripts/zowe_operations.sh
        .github/scripts/zowe_operations.sh

    - name: Run COBOL Check on Mainframe
      env:
        ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
        ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
      run: |
        sshpass -p "$ZOWE_PASSWORD" ssh -o StrictHostKeyChecking=no $ZOWE_USERNAME@204.90.115.200 'sh -s' < .github/scripts/mainframe_operations.sh